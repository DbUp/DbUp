DB Operation: Open connection
Info:         Beginning database upgrade
Info:         Checking whether journal table exists..
DB Operation: Execute scalar command: 
                SELECT 1 FROM RDB$RELATIONS WHERE RDB$SYSTEM_FLAG = 0 AND RDB$RELATION_NAME = UPPER('TestSchemaVersions')
                
DB Operation: Dispose command
Info:         Journal table does not exist
Info:         Executing Database Server script 'Script0001.sql'
Info:         Checking whether journal table exists..
DB Operation: Execute scalar command: 
                SELECT 1 FROM RDB$RELATIONS WHERE RDB$SYSTEM_FLAG = 0 AND RDB$RELATION_NAME = UPPER('TestSchemaVersions')
                
DB Operation: Dispose command
Info:         Creating the "TestSchemaVersions" table
DB Operation: Execute non query command: 
                CREATE TABLE TestSchemaVersions (
                    SchemaVersionsId    INTEGER         NOT NULL,
                    ScriptName          VARCHAR(255)    NOT NULL,
                    Applied             TIMESTAMP       NOT NULL,
                    CONSTRAINT pk_TestSchemaVersions_id PRIMARY KEY (SchemaVersionsId)
                )
DB Operation: Dispose command
Info:         The "TestSchemaVersions" table has been created
DB Operation: Execute non query command: 
                CREATE SEQUENCE GEN_TestSchemaVersionsID
                
DB Operation: Dispose command
Info:         The GEN_TestSchemaVersionsID generator has been created
DB Operation: Execute non query command: 
                CREATE TRIGGER BI_TestSchemaVersionsID FOR TestSchemaVersions ACTIVE BEFORE INSERT POSITION 0 
                AS BEGIN
                    IF (new.SchemaVersionsId IS NULL OR (new.SchemaVersionsId = 0)) 
                    THEN new.SchemaVersionsId = GEN_ID(GEN_TestSchemaVersionsID,1);
                END;
DB Operation: Dispose command
Info:         The BI_TestSchemaVersionsID trigger has been created
DB Operation: Execute non query command: script1contents
DB Operation: Dispose command
DB Operation: Create parameter
Info:         DB Operation: Add parameter to command: scriptName=Script0001.sql
DB Operation: Create parameter
Info:         DB Operation: Add parameter to command: applied=<date>
DB Operation: Execute non query command:  
                INSERT INTO TestSchemaVersions (ScriptName, Applied) VALUES (@scriptName, @applied)
                
DB Operation: Dispose command
Info:         Upgrade successful
DB Operation: Dispose connection
