-- Creates the following tables:
--  * Entry
--  * Feed
--  * FeedItem
--  * Revision

create table ENTRY(
    ID INTEGER GENERATED ALWAYS AS IDENTITY (start with 1 increment by 1 nocycle),
	NAME VARCHAR2(50) NOT NULL,
	TITLE VARCHAR2(255) NOT NULL,
	SUMMARY VARCHAR2(1000) NOT NULL,
	IS_VISIBLE number(1) NOT NULL,
	PUBLISHED TIMESTAMP NOT NULL,
	LATEST_REVISION_ID integer NULL,
    CONSTRAINT PK_ENTRY_ID PRIMARY KEY (ID) ENABLE VALIDATE
)
/
create table FEED(
    ID INTEGER GENERATED ALWAYS AS IDENTITY (start with 1 increment by 1 nocycle),
    NAME VARCHAR2(100) NOT NULL,
    TITLE VARCHAR2(255) NOT NULL,
    CONSTRAINT PK_FEED_ID PRIMARY KEY (ID) ENABLE VALIDATE
)
/
create table REVISION(
    ID INTEGER GENERATED ALWAYS AS IDENTITY (start with 1 increment by 1 nocycle),
    ENTRY_ID INTEGER NOT NULL,
    BODY VARCHAR2(255) NOT NULL,
    CHANGE_SUMMARY VARCHAR2(1000) NOT NULL,
    REASON VARCHAR2(1000) NOT NULL, 
    REVISED TIMESTAMP NOT NULL,
    TAGS VARCHAR2(1000) NOT NULL, 
    STATUS INTEGER NOT NULL,
    IS_VISIBLE number(1) NOT NULL,
    REVISION_NUMBER INTEGER NOT NULL,
    CONSTRAINT PK_REVISION_ID PRIMARY KEY (ID) ENABLE VALIDATE
)
/
create table FEED_ITEM(
    ID INTEGER GENERATED ALWAYS AS IDENTITY (start with 1 increment by 1 nocycle),
    FEED_ID INTEGER NOT NULL,
    ITEM_ID INTEGER NOT NULL,
    SORT_DATE TIMESTAMP NOT NULL,
    CONSTRAINT PK_FEED_ITEM_ID PRIMARY KEY (ID) ENABLE VALIDATE
)
/
create table COMMENTS(
    ID INTEGER GENERATED ALWAYS AS IDENTITY (start with 1 increment by 1 nocycle),
    BODY VARCHAR2(1000) NOT NULL,
    AUTHOR_NAME VARCHAR2(100) NOT NULL,
    AUTHOR_COMPANY VARCHAR2(100) NOT NULL,
    AUTHOR_EMAIL VARCHAR2(100) NOT NULL,
    AUTHOR_URL VARCHAR2(100) NOT NULL,
    POSTED TIMESTAMP NOT NULL,
    ENTRY_ID INTEGER NOT NULL,
    STATUS INTEGER NOT NULL,
    CONSTRAINT PK_COMMENT_ID PRIMARY KEY (ID) ENABLE VALIDATE
)