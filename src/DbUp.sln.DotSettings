<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/Profiles/=My_0020Cleanup/@EntryIndexedValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;Profile name="My Cleanup"&gt;&lt;CSArrangeThisQualifier&gt;True&lt;/CSArrangeThisQualifier&gt;&lt;CSRemoveCodeRedundancies&gt;True&lt;/CSRemoveCodeRedundancies&gt;&lt;CSUseAutoProperty&gt;True&lt;/CSUseAutoProperty&gt;&lt;CSMakeFieldReadonly&gt;True&lt;/CSMakeFieldReadonly&gt;&lt;CSUseVar&gt;&lt;BehavourStyle&gt;CAN_CHANGE_TO_IMPLICIT&lt;/BehavourStyle&gt;&lt;LocalVariableStyle&gt;ALWAYS_IMPLICIT&lt;/LocalVariableStyle&gt;&lt;ForeachVariableStyle&gt;ALWAYS_IMPLICIT&lt;/ForeachVariableStyle&gt;&lt;/CSUseVar&gt;&lt;CSOptimizeUsings&gt;&lt;OptimizeUsings&gt;True&lt;/OptimizeUsings&gt;&lt;EmbraceInRegion&gt;False&lt;/EmbraceInRegion&gt;&lt;RegionName&gt;&lt;/RegionName&gt;&lt;/CSOptimizeUsings&gt;&lt;CSShortenReferences&gt;True&lt;/CSShortenReferences&gt;&lt;CSReformatCode&gt;True&lt;/CSReformatCode&gt;&lt;CSharpFormatDocComments&gt;True&lt;/CSharpFormatDocComments&gt;&lt;CSReorderTypeMembers&gt;True&lt;/CSReorderTypeMembers&gt;&lt;JsInsertSemicolon&gt;True&lt;/JsInsertSemicolon&gt;&lt;JsReformatCode&gt;True&lt;/JsReformatCode&gt;&lt;XMLReformatCode&gt;True&lt;/XMLReformatCode&gt;&lt;/Profile&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/RecentlyUsedProfile/@EntryValue">My Cleanup</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/SilentCleanupProfile/@EntryValue">My Cleanup</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ANONYMOUS_METHOD_DECLARATION_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/CASE_BLOCK_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/EMPTY_BLOCK_STYLE/@EntryValue">TOGETHER_SAME_LINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FIXED_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FOR_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FOREACH_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_IFELSE_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_USING_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_WHILE_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_ANONYMOUS_METHOD_BLOCK/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INITIALIZER_BRACES/@EntryValue">END_OF_LINE</s:String>
	
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/OTHER_BRACES/@EntryValue">END_OF_LINE</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_CATCH_ON_NEW_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ELSE_ON_NEW_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FINALLY_ON_NEW_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_ARRAY_ACCESS_BRACKETS/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_EMPTY_METHOD_CALL_PARENTHESES/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_EMPTY_METHOD_PARENTHESES/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_METHOD_CALL_PARENTHESES/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_METHOD_PARENTHESES/@EntryValue">True</s:Boolean>
	
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_FIRST_TYPE_PARAMETER_CONSTRAINT/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_CHAINED_METHOD_CALLS/@EntryValue">CHOP_ALWAYS</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_EXTENDS_LIST_STYLE/@EntryValue">CHOP_ALWAYS</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_LINES/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_MULTIPLE_DECLARATION_STYLE/@EntryValue">CHOP_ALWAYS</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_MULTIPLE_TYPE_PARAMEER_CONSTRAINTS_STYLE/@EntryValue">CHOP_ALWAYS</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_OBJECT_AND_COLLECTION_INITIALIZER_STYLE/@EntryValue">CHOP_ALWAYS</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/JavaScriptCodeFormatting/ALIGN_MULTIPLE_DECLARATION/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/JavaScriptCodeFormatting/JavaScriptFormatLineBreaks/SINGLE_STATEMENT_FUNCTION_STYLE/@EntryValue">ForceLineBreaks</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/JavaScriptCodeFormatting/JavaScriptFormatOther/ALIGN_MULTIPLE_DECLARATION/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/JavaScriptCodeFormatting/JavaScriptFormatSpaces/SPACE_BEFORE_PROPERTY_COLON/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/JavaScriptCodeFormatting/SINGLE_STATEMENT_FUNCTION_STYLE/@EntryValue">LINE_BREAK</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/XmlFormatter/WrapLongLines/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CSharpFileLayoutPatterns/Pattern/@EntryValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&#xD;
&lt;Patterns xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"&gt;&#xD;
  &lt;TypePattern Priority="100" DisplayName="Type Pattern"&gt;&#xD;
    &lt;TypePattern.Match&gt;&#xD;
      &lt;Or&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Interface" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;HasAttribute Name="System.Runtime.InteropServices.InterfaceTypeAttribute" /&gt;&#xD;
            &lt;HasAttribute Name="System.Runtime.InteropServices.ComImport" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
        &lt;HasAttribute Name="System.Runtime.InteropServices.StructLayoutAttribute" /&gt;&#xD;
      &lt;/Or&gt;&#xD;
    &lt;/TypePattern.Match&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
  &lt;TypePattern DisplayName="Type Pattern"&gt;&#xD;
    &lt;Region Name="Delegates"&gt;&#xD;
      &lt;Entry Priority="100" DisplayName="Entry"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Access Is="Public" /&gt;&#xD;
            &lt;Kind Is="Delegate" /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Region&gt;&#xD;
    &lt;Region Name="${0} enum"&gt;&#xD;
      &lt;Region.GroupBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Region.GroupBy&gt;&#xD;
      &lt;Entry Priority="100" DisplayName="Entry"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Access Is="Public" /&gt;&#xD;
            &lt;Kind Is="Enum" /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Region&gt;&#xD;
    &lt;Entry DisplayName="Entry"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="Constant" /&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="Field" /&gt;&#xD;
            &lt;Static /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Kind Order="Constant Field" /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Entry"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Field" /&gt;&#xD;
          &lt;Not&gt;&#xD;
            &lt;Static /&gt;&#xD;
          &lt;/Not&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Readonly /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Entry"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Event" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Entry"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Property" /&gt;&#xD;
          &lt;Name Is="Id" IgnoreCase="True" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Entry"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="Property" /&gt;&#xD;
          &lt;Kind Is="Indexer" /&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Entry"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Constructor" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Static /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry Priority="100" DisplayName="Entry"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.FixtureSetUpAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.FixtureTearDownAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute" Inherited="True" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry Priority="100" DisplayName="Entry"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.FixtureSetUpAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.FixtureTearDownAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute" Inherited="True" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry Priority="100" DisplayName="Entry"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Access Is="Public" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry Priority="100" DisplayName="Entry"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Access Is="Protected" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry Priority="100" DisplayName="Entry"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Access Is="Private" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Entry" /&gt;&#xD;
    &lt;Region Name="Nested type: ${0}"&gt;&#xD;
      &lt;Region.GroupBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Region.GroupBy&gt;&#xD;
      &lt;Entry DisplayName="Entry"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;Kind Is="Type" /&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Region&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
&lt;/Patterns&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpMemberOrderPattern/CustomPattern/@EntryValue">&lt;?xml version="1.0" encoding="utf-8" ?&gt;&#xD;
&#xD;
&lt;!--&#xD;
I. Overall&#xD;
&#xD;
I.1 Each pattern can have &lt;Match&gt;....&lt;/Match&gt; element. For the given type declaration, the pattern with the match, evaluated to 'true' with the largest weight, will be used &#xD;
I.2 Each pattern consists of the sequence of &lt;Entry&gt;...&lt;/Entry&gt; elements. Type member declarations are distributed between entries&#xD;
I.3 If pattern has RemoveAllRegions="true" attribute, then all regions will be cleared prior to reordering. Otherwise, only auto-generated regions will be cleared&#xD;
I.4 The contents of each entry is sorted by given keys (First key is primary,  next key is secondary, etc). Then the declarations are grouped and en-regioned by given property&#xD;
&#xD;
II. Available match operands&#xD;
&#xD;
Each operand may have Weight="..." attribute. This weight will be added to the match weight if the operand is evaluated to 'true'.&#xD;
The default weight is 1&#xD;
&#xD;
II.1 Boolean functions:&#xD;
II.1.1 &lt;And&gt;....&lt;/And&gt;&#xD;
II.1.2 &lt;Or&gt;....&lt;/Or&gt;&#xD;
II.1.3 &lt;Not&gt;....&lt;/Not&gt;&#xD;
&#xD;
II.2 Operands&#xD;
II.2.1 &lt;Kind Is="..."/&gt;. Kinds are: class, struct, interface, enum, delegate, type, constructor, destructor, property, indexer, method, operator, field, constant, event, member&#xD;
II.2.2 &lt;Name Is="..." [IgnoreCase="true/false"] /&gt;. The 'Is' attribute contains regular expression&#xD;
II.2.3 &lt;HasAttribute CLRName="..." [Inherit="true/false"] /&gt;. The 'CLRName' attribute contains regular expression&#xD;
II.2.4 &lt;Access Is="..."/&gt;. The 'Is' values are: public, protected, internal, protected internal, private&#xD;
II.2.5 &lt;Static/&gt;&#xD;
II.2.6 &lt;Abstract/&gt;&#xD;
II.2.7 &lt;Virtual/&gt;&#xD;
II.2.8 &lt;Override/&gt;&#xD;
II.2.9 &lt;Sealed/&gt;&#xD;
II.2.10 &lt;Readonly/&gt;&#xD;
II.2.11 &lt;ImplementsInterface CLRName="..."/&gt;. The 'CLRName' attribute contains regular expression&#xD;
II.2.12 &lt;HandlesEvent /&gt;&#xD;
--&gt;&#xD;
&#xD;
&lt;Patterns xmlns="urn:shemas-jetbrains-com:member-reordering-patterns"&gt;&#xD;
&#xD;
	&lt;!--Do not reorder COM interfaces and structs marked by StructLayout attribute--&gt;&#xD;
	&lt;Pattern&gt;&#xD;
		&lt;Match&gt;&#xD;
			&lt;Or Weight="100"&gt;&#xD;
				&lt;And&gt;&#xD;
					&lt;Kind Is="interface"/&gt;&#xD;
					&lt;Or&gt;&#xD;
						&lt;HasAttribute CLRName="System.Runtime.InteropServices.InterfaceTypeAttribute"/&gt;&#xD;
						&lt;HasAttribute CLRName="System.Runtime.InteropServices.ComImport"/&gt;&#xD;
					&lt;/Or&gt;&#xD;
				&lt;/And&gt;&#xD;
				&lt;HasAttribute CLRName="System.Runtime.InteropServices.StructLayoutAttribute"/&gt;&#xD;
			&lt;/Or&gt;&#xD;
		&lt;/Match&gt;&#xD;
	&lt;/Pattern&gt;&#xD;
&#xD;
&#xD;
	&lt;!--Default pattern--&gt;&#xD;
	&lt;Pattern RemoveAllRegions="true"&gt;&#xD;
&#xD;
		&lt;!--public delegate--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And Weight="100"&gt;&#xD;
					&lt;Access Is="public"/&gt;&#xD;
					&lt;Kind Is="delegate"/&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
			&lt;Group Region="Delegates"/&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--public enum--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And Weight="100"&gt;&#xD;
					&lt;Access Is="public"/&gt;&#xD;
					&lt;Kind Is="enum"/&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
			&lt;Group&gt;&#xD;
				&lt;Name Region="${Name} enum"/&gt;&#xD;
			&lt;/Group&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--static fields and constants--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Or&gt;&#xD;
					&lt;Kind Is="constant"/&gt;&#xD;
					&lt;And&gt;&#xD;
						&lt;Kind Is="field"/&gt;&#xD;
						&lt;Static/&gt;&#xD;
					&lt;/And&gt;&#xD;
				&lt;/Or&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Kind Order="constant field"/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--instance fields--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And&gt;&#xD;
					&lt;Kind Is="field"/&gt;&#xD;
					&lt;Not&gt;&#xD;
						&lt;Static/&gt;&#xD;
					&lt;/Not&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Readonly/&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--events--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Kind Is="event"/&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		 &#xD;
&#xD;
		&lt;!--Id property--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And&gt;&#xD;
					&lt;Kind Is="property"/&gt;&#xD;
					&lt;Name Is="Id" IgnoreCase="true" /&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		 &#xD;
		&lt;!--properties, indexers--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Or&gt;&#xD;
					&lt;Kind Is="property"/&gt;&#xD;
					&lt;Kind Is="indexer"/&gt;&#xD;
				&lt;/Or&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Name /&gt;&#xD;
			&lt;/Sort&gt;			&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!--Constructors. Place static one first--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Kind Is="constructor"/&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Static/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!-- Test setup methods --&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And&gt;&#xD;
					&lt;Kind Is="method"/&gt;&#xD;
					&lt;Or Weight="100"&gt;&#xD;
						&lt;HasAttribute CLRName="NUnit.Framework.SetUpAttribute" Inherit="true"/&gt;&#xD;
						&lt;HasAttribute CLRName="NUnit.Framework.TearDownAttribute" Inherit="true"/&gt;&#xD;
						&lt;HasAttribute CLRName="NUnit.Framework.FixtureSetUpAttribute" Inherit="true"/&gt;&#xD;
						&lt;HasAttribute CLRName="NUnit.Framework.FixtureTearDownAttribute" Inherit="true"/&gt;&#xD;
						&lt;HasAttribute CLRName="Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute" Inherit="true"/&gt;&#xD;
					&lt;/Or&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
		&lt;/Entry&gt;&#xD;
		&#xD;
		&lt;!-- Test Methods --&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And&gt;&#xD;
					&lt;Kind Is="method"/&gt;&#xD;
					&lt;Or Weight="100"&gt;&#xD;
						&lt;HasAttribute CLRName="NUnit.Framework.SetUpAttribute" Inherit="true"/&gt;&#xD;
						&lt;HasAttribute CLRName="NUnit.Framework.TearDownAttribute" Inherit="true"/&gt;&#xD;
						&lt;HasAttribute CLRName="NUnit.Framework.FixtureSetUpAttribute" Inherit="true"/&gt;&#xD;
						&lt;HasAttribute CLRName="NUnit.Framework.FixtureTearDownAttribute" Inherit="true"/&gt;&#xD;
						&lt;HasAttribute CLRName="Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute" Inherit="true"/&gt;&#xD;
					&lt;/Or&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Name /&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&#xD;
		&lt;!-- public methods --&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And Weight="100"&gt;&#xD;
					&lt;Kind Is="method" /&gt;&#xD;
					&lt;Access Is="public" /&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Name /&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!-- protected methods --&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And Weight="100"&gt;&#xD;
					&lt;Kind Is="method" /&gt;&#xD;
					&lt;Access Is="protected" /&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Name /&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;&#xD;
&#xD;
		&lt;!-- private methods --&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;And Weight="100"&gt;&#xD;
					&lt;Kind Is="method" /&gt;&#xD;
					&lt;Access Is="private" /&gt;&#xD;
				&lt;/And&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Name /&gt;&#xD;
			&lt;/Sort&gt;&#xD;
		&lt;/Entry&gt;		&#xD;
		&#xD;
		&lt;!--all other members--&gt;&#xD;
		&lt;Entry/&gt;&#xD;
&#xD;
		&lt;!--nested types--&gt;&#xD;
		&lt;Entry&gt;&#xD;
			&lt;Match&gt;&#xD;
				&lt;Kind Is="type"/&gt;&#xD;
			&lt;/Match&gt;&#xD;
			&lt;Sort&gt;&#xD;
				&lt;Name/&gt;&#xD;
			&lt;/Sort&gt;&#xD;
			&lt;Group&gt;&#xD;
				&lt;Name Region="Nested type: ${Name}"/&gt;&#xD;
			&lt;/Group&gt;&#xD;
		&lt;/Entry&gt;&#xD;
	&lt;/Pattern&gt;&#xD;
&#xD;
&lt;/Patterns&gt;&#xD;
</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpMemberOrderPattern/LayoutType/@EntryValue">CustomLayout</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/Generate/=Constructor/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/Generate/=Constructor/Options/=XmlDocumentation/@EntryIndexedValue">False</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/Generate/=Global/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/Generate/=Global/Options/=PropertyBody/@EntryIndexedValue">Default body (from options)</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/Generate/=Implementations/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/Generate/=Implementations/Options/=WrapInRegion/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/CodeStyle/Generate/=Implementations/Options/=XmlDocumentation/@EntryIndexedValue">False</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/Generate/=Overrides/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/Generate/=Overrides/Options/=WrapInRegion/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/CodeStyle/Generate/=Overrides/Options/=XmlDocumentation/@EntryIndexedValue">False</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/IntroduceVariableUseVar/UseVarForIntroduceVariableRefactoring/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=IP/@EntryIndexedValue">IP</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/EventHandlerPatternLong/@EntryValue">$object$_On$event$</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=MethodPropertyEvent/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb_AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateConstants/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AA_BB" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateInstanceFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateStaticFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PublicFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/EventHandlerPatternLong/@EntryValue">$object$_On$event$</s:String>
	<s:Boolean x:Key="/Default/Environment/InjectedLayers/FileInjectedLayer/=6A42E1F614758D46A1AB86B6577C777A/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/Environment/InjectedLayers/FileInjectedLayer/=6A42E1F614758D46A1AB86B6577C777A/AbsolutePath/@EntryValue">D:\GitHub\DbUp\src\DbUp.sln.DotSettings</s:String>
	<s:String x:Key="/Default/Environment/InjectedLayers/FileInjectedLayer/=6A42E1F614758D46A1AB86B6577C777A/RelativePath/@EntryValue"></s:String>
	<s:Boolean x:Key="/Default/Environment/InjectedLayers/InjectedLayerCustomization/=File6A42E1F614758D46A1AB86B6577C777A/@KeyIndexDefined">True</s:Boolean>
	<s:Double x:Key="/Default/Environment/InjectedLayers/InjectedLayerCustomization/=File6A42E1F614758D46A1AB86B6577C777A/RelativePriority/@EntryValue">1</s:Double></wpf:ResourceDictionary>